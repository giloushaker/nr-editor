


Interface:
    Main Menu:
        ☐ Add System
        ☐ Add Catalogue
        ☐ Edit Catalogue
        ☐ Delete Catalogue
        ☐ Errors icon on catalogues
            Errrors:
            Missing imports
            Errors within the catalogue
            Unsaved?
            Unreferenced + unplayable
        ☐ Indication that catalogue has been modified by the user


Editor:

    Features:
        ✔ text Search @done(23-05-08 21:18)
            Catalogue.findOptionsByName(query) then filter 
            ☐ add in ui
        ☐ copy, paste, move, delete
        ☐ undo/redo
        ☐ move to
            Would allow the used to right click on an entry to move it somewhere else, 
            like an imported catalogue for example, 
            we would do that automatically without breaking previous links
        ☐ errors
        ☐ references from
        ☐ references to
        ☐ move back/forward (like browser navigation)
        ✔ save @done(23-05-08 18:48)
        ☐ export xml/zip
        ☐ upload to github
        ✔ download from github (needs proxy) @done(23-05-08 18:43)
        ☐ view old versions, changes
        ☐ load a roster in ui
        ✔ search entries @done(23-05-09 01:14)
            ☐ search nested

            

        



xml:
  export const catalogueTagMap = {
  publications: "publication",
  costTypes: "costType",
  profileTypes: "profileType",
  categoryEntries: "categoryEntry",
  forceEntries: "forceEntry",
  selectionEntries: "selectionEntry",
  entryLinks: "entryLink",
  sharedSelectionEntries: "selectionEntry",
  sharedSelectionEntryGroups: "selectionEntryGroup",
  sharedProfiles: "profile",
  characteristics: "characteristic",
  modifiers: "modifier",
  constraints: "constraint",
  profiles: "profile",
  categoryLinks: "categoryLink",
  costs: "cost",
  conditionGroups: "conditionGroup",
  conditions: "condition",
  repeats: "repeat",
  selectionEntryGroups: "selectionEntryGroup",
  infoLinks: "infoLink",
  characteristicTypes: "characteristicType",
  catalogueLinks: "catalogueLink",
  modifierGroups: "modifierGroup",
  rules: "rule",
  sharedRules: "rule",
  infoGroups: "infoGroup",
};
export const attributeNames = [
  "id",
  "name",
  "hidden",
  "field",
  "scope",
  "value",
  "percentValue",
  "shared",
  "includeChildSelections",
  "includeChildForces",
  "childId",
  "type",
  "targetId",
  "primary",
  "typeId",
  "collective",
  "import",
  "$text",
  "page",
  "typeName",
  "defaultSelectionEntryId",
  "revision",
  "battleScribeVersion",
  "authorName",
  "authorContact",
  "authorUrl",
  "library",
  "gameSystemId",
  "gameSystemRevision",
  "xmlns",
];