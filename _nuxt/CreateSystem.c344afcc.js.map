{"version":3,"file":"CreateSystem.c344afcc.js","sources":["../../../../components/SelectFile.vue","../../../../components/CreateSystem.vue"],"sourcesContent":["<template>\n  <button @click=\"popFileInput\" class=\"bouton\" :disabled=\"uploading\" v-if=\"electron\">\n    <template v-if=\"!uploading\"> Load System </template>\n    <template v-else> ... </template>\n  </button>\n  <span v-else>&lt;SelectFile&gt; is only available in electron app</span>\n</template>\n\n<script lang=\"ts\">\nimport { convertToJson, getExtension, isAllowedExtension } from \"~/assets/shared/battlescribe/bs_convert\";\nimport { getDataObject } from \"~/assets/shared/battlescribe/bs_main\";\nimport { getFolderFiles, showOpenDialog } from \"~/electron/node_helpers\";\nexport default {\n  emits: [\"uploaded\"],\n  data() {\n    return {\n      uploading: false,\n    };\n  },\n  computed: {\n    electron() {\n      return Boolean(global.electron);\n    },\n  },\n  methods: {\n    async onFilesSelected(filePaths: string[]) {\n      const result_files = [] as Object[];\n      if (!filePaths.length) return;\n      filePaths = [filePaths[0]];\n      for (const path of filePaths) {\n        const files = await getFolderFiles(path);\n        if (!files?.length) return;\n        for (const file of files.filter((o) => isAllowedExtension(o.name))) {\n          const asJson = await convertToJson(file.data, getExtension(file.name));\n          getDataObject(asJson).fullFilePath = file.path.replaceAll(\"\\\\\", \"/\");\n          result_files.push(asJson);\n        }\n      }\n      if (result_files.length) {\n        this.$emit(\"uploaded\", result_files);\n      }\n    },\n    async popFileInput() {\n      if (!globalThis.electron) {\n        throw new Error(\"SelectFile is for use in electron app only\");\n      }\n      try {\n        this.uploading = true;\n        const result = await showOpenDialog({\n          properties: [\"openFile\"],\n        });\n        if (result?.filePaths?.length) {\n          await this.onFilesSelected(result.filePaths);\n        }\n      } catch (e) {\n        console.error(e);\n      } finally {\n        this.uploading = false;\n      }\n    },\n  },\n};\n</script>\n<style scoped lang=\"scss\">\n.invisible {\n  opacity: 0; /* make transparent */\n  z-index: -1; /* move under anything else */\n  position: absolute; /* don't let it take up space */\n}\n</style>\n","<template>\n  <button class=\"bouton\" @click=\"click\"> Create System </button>\n  <PopupDialog v-if=\"open\" v-model=\"open\" button=\"Create\" @button=\"create\">\n    <h2 class=\"text-center\">Create System</h2>\n    <span>Name </span>\n    <input class=\"w-full\" type=\"text\" v-model=\"text\" required />\n    <span>Format </span>\n    <select v-model=\"format\">\n      <option value=\"gstz\">.gstz (Zipped XML)</option>\n      <option value=\"gst\">.gst (XML)</option>\n      <option value=\"json\">.json (JSON)</option>\n    </select>\n    <template v-if=\"electron\">\n      <div> The system will be created at: </div>\n      <div class=\"gray\">{{ folder }}/{{ text }}/</div>\n    </template>\n  </PopupDialog>\n</template>\n<script lang=\"ts\">\nimport { removeSuffix } from \"~/assets/shared/battlescribe/bs_helpers\";\nimport { useEditorStore } from \"~/stores/editorStore\";\nimport { useSettingsStore } from \"~/stores/settingsState\";\n\nexport default {\n  emits: [\"created\"],\n  data() {\n    return { open: false, text: \"\", format: \"gst\" };\n  },\n  setup() {\n    return { store: useEditorStore(), settings: useSettingsStore() };\n  },\n  computed: {\n    electron() {\n      return Boolean(globalThis.electron);\n    },\n    folder() {\n      if (!this.settings.systemsFolder) {\n        return \"\";\n      }\n      const folder = `${removeSuffix(this.settings.systemsFolder.replaceAll(\"\\\\\", \"/\"), \"/\")}`;\n      return folder;\n    },\n  },\n  methods: {\n    click() {\n      this.text = \"\";\n      this.open = true;\n    },\n\n    async create() {\n      if (this.text) {\n        const created = await this.store.create_system(this.text, this.folder, this.format);\n        this.$emit(\"created\", created);\n      }\n    },\n  },\n};\n</script>\n<style scoped>\n.create-system-popup {\n  text-align: center;\n}\n</style>\n"],"names":["_sfc_main$1","filePaths","result_files","path","files","getFolderFiles","file","o","isAllowedExtension","asJson","convertToJson","getExtension","getDataObject","result","showOpenDialog","_a","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock","args","_Fragment","_createTextVNode","_sfc_main","useEditorStore","useSettingsStore","removeSuffix","created","_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","_createElementVNode","_hoisted_4","_hoisted_6","_hoisted_7","_hoisted_5","_createBlock","_component_PopupDialog","$event","_withCtx","_withDirectives","_vModelText","_vModelSelect","_hoisted_8"],"mappings":"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"}