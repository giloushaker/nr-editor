{"version":3,"mappings":"uJAaM,CAAE,MAAAA,CAAO,EAAGC,GAGED,EAAM,OAAS,IAChC,MAAM;AAAA,CAAI,EACV,OAAO,CAAC,EACR,IAAKE,IAKG,CACL,KALWA,EACV,QAAQ,YAAa,EAAE,EACvB,QAAQ,OAAQ,KAAK,EACrB,KAAM,EAGP,SAAWA,EAAK,SAAS,cAAc,GAAK,CAACA,EAAK,SAAS,QAAQ,GACjEA,EAAK,SAAS,UAAU,GACxBA,EAAK,SAAS,aAAa,CAC9B,EACF,EAAE,IAAIC,GAAK,qBAAqBA,EAAE,SAAW,YAAc,OAAOA,EAAE,aAAa,EAAE,KAAK;AAAA,CAAI,EAG/F,MAAMC,EAAa,OAAOJ,EAAM,YAAc,GAAG,EAC3CK,EAAQD,IAAe,IAEvBE,EAAgBN,EAAM,gBAAkBK,EAAQ,iBAAmB,yBACnEE,EAAcP,EAAM,SAAWA,EAAM,SAAU,EAC/CQ,EAAkF,OAQlFC,EAAgBJ,IALiB,IAAKK,EAAA,IAAC,OAAO,yBAA4C,EAAC,qHAAC,KAAKC,GAAKA,EAAE,SAAWA,CAAC,CAAC,IAGlG,IAAKD,EAAA,IAAC,OAAO,yBAA4C,uHAAE,KAAKC,GAAKA,EAAE,SAAWA,CAAC,CAAC","names":["error","props","line","i","statusCode","is404","statusMessage","description","stack","ErrorTemplate","__vitePreload","r"],"sources":["../../../../node_modules/nuxt/dist/app/components/nuxt-error-page.vue"],"sourcesContent":["<template>\n  <ErrorTemplate v-bind=\"{ statusCode, statusMessage, description, stack }\" />\n</template>\n\n<script setup>\nimport { defineAsyncComponent } from 'vue'\n\nconst props = defineProps({\n  error: Object\n})\n\n// Deliberately prevent reactive update when error is cleared\n// eslint-disable-next-line vue/no-setup-props-destructure\nconst { error } = props\n\n// TODO: extract to a separate utility\nconst stacktrace = (error.stack || '')\n  .split('\\n')\n  .splice(1)\n  .map((line) => {\n    const text = line\n      .replace('webpack:/', '')\n      .replace('.vue', '.js') // TODO: Support sourcemap\n      .trim()\n    return {\n      text,\n      internal: (line.includes('node_modules') && !line.includes('.cache')) ||\n        line.includes('internal') ||\n        line.includes('new Promise')\n    }\n  }).map(i => `<span class=\"stack${i.internal ? ' internal' : ''}\">${i.text}</span>`).join('\\n')\n\n// Error page props\nconst statusCode = Number(error.statusCode || 500)\nconst is404 = statusCode === 404\n\nconst statusMessage = error.statusMessage ?? (is404 ? 'Page Not Found' : 'Internal Server Error')\nconst description = error.message || error.toString()\nconst stack = process.dev && !is404 ? error.description || `<pre>${stacktrace}</pre>` : undefined\n\n// TODO: Investigate side-effect issue with imports\nconst _Error404 = defineAsyncComponent(() => import('@nuxt/ui-templates/templates/error-404.vue').then(r => r.default || r))\nconst _Error = process.dev\n  ? defineAsyncComponent(() => import('@nuxt/ui-templates/templates/error-dev.vue').then(r => r.default || r))\n  : defineAsyncComponent(() => import('@nuxt/ui-templates/templates/error-500.vue').then(r => r.default || r))\n\nconst ErrorTemplate = is404 ? _Error404 : _Error\n</script>\n"],"file":"_nuxt/error-component.466c139a.js"}